.zust-btn {
  @extend %no-select;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: var(--button-bg-color);
  border-style: solid;
  border-color: var(--button-border-color);
  padding: 8px 12px;
  color: var(--button-text-color);
  margin: 5px;
  text-align: center;
  text-decoration: none;

  @if $css-variable-enabled {
    border-radius: var(--button-border-radius);
    border-width: var(--button-border-width);
    font-size: var(--medium-text);
    transition: var(--primary-transition);
  } @else {
    border-radius: $button-border-radius;
    border-width: $button-border-width;
    font-size: $medium-text;
    transition: $primary-transition;
  }


  // Important
  &.zust-icon-btn {
    padding: 8px !important;

    .zust-icon {
      margin: 0 !important;
    }
  }

  .zust-icon {
    margin: 0;
    --icon-size: 1rem;

    &:first-child:not(:last-child):not(:only-child) {
      margin-right: 0.3em;
      margin-left: -0.2em;
    }

    &:last-child:not(:first-child):not(:only-child) {
      margin-right: -0.2em;
      margin-left: 0.3em;
    }
  }

  &.zust-floating {
    border-width: 0;
    box-shadow: 0px 1px 4px 0px var(--button-shadow-color);

    &:hover, &.zust-hovered, &:focus, &.zust-focused {
      transform: translateY(-2px);
    }
  }

  &:hover, &.zust-hovered, input:checked + & {
    border-color: var(--button-hovered-border-color);
    //color: var(--button-text-color);
  }

  &:focus, &.zust-focused {
    border-color: var(--button-focus-border-color);
    @if $css-variable-enabled {
      box-shadow: 0 0 0 var(--button-border-spread) var(--button-focus-border-color);
    } @else {
      box-shadow: 0 0 0 $button-border-spread var(--button-focus-border-color);
    }
  }

  &[disabled] {
    pointer-events: none;
    cursor: default !important;
    opacity: 0.6;
  }

  &.zust-transparent {
    background-color: $transparent !important;
    border-width: 0 !important;

    &:hover, &.zust-hovered, input:checked + & {
      background-color: rgba(144, 144, 144, 0.1) !important;
      box-shadow: 0 0 0 0px rgba(144, 144, 144, 0.1) !important;
    }

    &:focus, &.zust-focused {
      background-color: $transparent;
    }
  }

  &.zust-custom, .zust-btns-custom > & {
    background-color: $transparent;
    border-width: 0;
    color: $white;

    &:focus, &.zust-focused {
      @if $css-variable-enabled {
        box-shadow: 0 0 0 var(button-border-spread) rgba(144, 144, 144, 0.15);
      } @else {
        box-shadow: 0 0 0 $button-border-spread rgba(144, 144, 144, 0.15);
      }
    }

    &.zust-floating {
      box-shadow: 0px 2px 3px 0px var(--button-shadow-color);
    }
  }

  // Colors
  @each $name, $color, $txt-color, $hovered-color, $border-spread-color in $item-colors {
    @if $name {
      &.zust-#{$name} {
        border-width: 0 !important;
        background-color: $color !important;
        color: $txt-color;

        &:hover, &.zust-hovered, input:checked + & {
          background-color: $hovered-color !important;
        }

        &:focus, &.zust-focused {
          @if $css-variable-enabled {
            box-shadow: 0 0 0 var(--button-border-spread) $border-spread-color !important;
          } @else {
            box-shadow: 0 0 0 $button-border-spread $border-spread-color !important;
          }
        }
      }

      &.zust-floating.zust-#{$name} {
        box-shadow: 0px 2px 3px 1px $border-spread-color;
      }
    }
  }

  &.zust-full-width, &.zust-fullwidth, .zust-btns-full-width > &:not(.zust-ignore), .zust-btns-fullwidth > &:not(.zust-ignore) {
    @extend %full-width;
  }

  &.zust-xlarge, .zust-btns-xlarge > &:not(.zust-ignore) {
    font-size: $xlarge-text !important;
    padding: 18px 27px !important;

    &.zust-icon-btn {
      padding: 18px !important;
    }

    .zust-icon {
      --icon-size: 1.9rem;
    }
  }

  &.zust-large, .zust-btns-large > &:not(.zust-ignore) {
    font-size: $large-text !important;
    padding: 14px 21px !important;

    &.zust-icon-btn {
      padding: 14px !important;
    }

    .zust-icon {
      --icon-size: 1.4rem;
    }
  }

  &.zust-default {
    width: max-content !important;
    height: max-content !important;
    font-size: $medium-text !important;
    padding: 8px 12px !important;
  }

  &.zust-small, .zust-small > &:not(.zust-ignore) {
    font-size: $small-text !important;
    padding: 4px 12px !important;

    &.zust-icon-btn {
      padding: 4px !important;
    }

    .zust-icon {
      --icon-size: 0.8rem;
    }
  }

  &.zust-outlined, .zust-btns-outlined > & {
    background-color: $transparent !important;
    border-width: 2px !important;

    &:hover, &.zust-hovered {
      background-color: $transparent !important;
    }
  }


  @each $name, $color, $skip, $hovered-color in $item-colors {
    @if $name {
      &.zust-outlined.zust-#{$name} {
        border-color: $color !important;
        color: $color;

        &:hover, &.zust-hovered {
          border-color: $hovered-color !important;
        }
      }
    }
  }
}

.zust-toggle-btn {
  input[type="checkbox"], input[type="radio"] {
    display: none;
  }

  input:checked + .zust-btn {
    filter: brightness(0.9);
  }
  .zust-el-group > & {
    > .zust-btn {
      margin: 0 !important;
    }
  }
}
