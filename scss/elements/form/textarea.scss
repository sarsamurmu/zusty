textarea.zust-textarea {
  appearance: none;
  padding: 8px 10px;
  background-color: var(--input-bg-color);
  color: var(--input-text-color);
  border-width: 0;
  border-bottom-width: 2px;
  border-color: $transparent;
  transition-property: background-color, box-shadow, border-color;

  @if $css-variable-enabled {
    transition: all var(--primary-transition), width 0s, height 0s;
    border-radius: var(--textarea-border-radius);
    font-size: var(--medium-text);
  } @else {
    transition: all $primary-transition, width 0s, height 0s;
    border-radius: $textarea-border-radius;
    font-size: $medium-text;
  }

  &:hover, &.zust-hovered {
    background-color: var(--input-hovered-bg-color);
  }

  &:focus, &.zust-focused {
    background-color: var(--body-color-primary);
    @if $css-variable-enabled {
      box-shadow: 0 0 0 var(--input-border-spread) var(--input-border-color);
    } @else {
      box-shadow: 0 0 0 $input-border-spread var(--input-border-color);
    }
  }

  &::placeholder {
    color: var(--input-placeholder-text-color);
  }

  &[disabled] {
    background-color: var(--item-disabled-bg-color);
    color: var(--item-disabled-fg-color);
    pointer-events: none;

    &::placeholder {
      color: var(--item-disabled-fg-color);
    }
  }

  &.zust-transparent {
    background-color: var(--input-stransparent-bg-color);

    &:hover, &.zust-hovered {
      background-color: var(--input-stransparent-hovered-bg-color);
    }

    &:focus, &.zust-focused {
      background-color: var(--body-color-primary);
    }
  }

  // Readonly
  &.zust-readonly, &[readonly] {

    &:hover, &.zust-hovered {
      background-color: var(--input-bg-color);
    }

    &:focus, &.zust-focused {
      background-color: var(--input-bg-color);
      box-shadow: 0 0 0 1px var(--input-border-color);
    }
  }

  @each $name, $color, $skip, $hovered-color in $item-colors {
    &.zust-#{$name} {
      border-color: $color;

      &:focus, &.zust-focused {
        border-color: $transparent;
        box-shadow: 0 0 0 $input-border-spread $hovered-color;
        @if $css-variable-enabled {
          box-shadow: 0 0 0 var(--input-border-spread) $hovered-color;
        } @else {
          box-shadow: 0 0 0 $input-border-spread $hovered-color;
        }
      }

      &.zust-readonly, &[readonly] {
        &:focus, &.zust-focused {
          box-shadow: 0 0 0 1px $hovered-color;
        }
      }
    }
  }
}
