$container-items-margin: 10px !default;
$container-items-padding: 5px !default;
$container-padding: 0px !default;
$container-margin: 10px !default;

// Comfort Use
$it-mar: $container-items-margin;
$it-pad: $container-items-padding;

// Sizes
@mixin sizes($suffix: '') {
  &.zust-1-2#{$suffix}, &.zust-half#{$suffix}  {
    flex: none;
    width: 50% !important;
  }

  // Three Parts
  @for $i from 1 through 2 {
    &.zust-#{$i}-3#{$suffix} {
      flex: none;
      width: percentage($i/3) !important;
    }
  }

  // Four Parts
  @for $i from 1 through 3 {
    &.zust-#{$i}-4#{$suffix} {
      flex: none;
      width: percentage($i/4) !important;
    }
  }

  // Five Parts
  @for $i from 1 through 4 {
    &.zust-#{$i}-5#{$suffix} {
      flex: none;
      width: percentage($i/5) !important;
    }
  }

  // 12 Parts
  @for $i from 1 through 11 {
    &.zust-#{$i}-12#{$suffix} {
      flex: none;
      width: percentage($i/12) !important;
    }
  }
}

.zust-container {
  padding: $container-padding;
  margin: $container-margin;
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  overflow: visible;

  &.zust-v-centered {
    align-items: center;
  }

  &.zust-h-centered {
    justify-content: center;
  }

  &.zust-f-centered {
    align-items: center;
    justify-content: center;
  }

  &.zust-column {
    margin: 0 0 $container-margin 0;

// Replacement #1

    $not-selector: getClassList($breakpoint-names, ':not(.zust-name)', 'name', '', '', '');

    &:not(.zust-custom)#{$not-selector} {
      @include tablet {
        flex-wrap: nowrap;
      }
    }

    $common-selector: getClassList($breakpoint-names, '.zust-name', 'name', '&', '', ', &');

    #{$common-selector} {
      > .zust-column {
        margin: 0 0 $it-mar 0;
      }
    }

/*
//    &:not(.zust-custom):not(.zust-mobile):not(.zust-tablet):not(.zust-touch):not(.zust-desktop) {
//      @include tablet {
//        flex-wrap: nowrap;
//      }
//    }


    &.zust-mobile, &.zust-tablet, &.zust-touch, &.zust-desktop {
      > .zust-column {
        margin: 0 0 $it-mar 0;
      }
    }
*/
// End of Replacement #1

    &.zust-custom {
      &:not(.zust-active) {
        > .zust-column {
          margin: 0 0 $it-mar 0;
        }
      }

      &.zust-active {
        flex-wrap: nowrap;

        > .zust-column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    &.zust-all/*, &.zust-mobile*/ {
      @include mobile {
        flex-wrap: nowrap;

        > .zust-column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    // Replacement #2
    /*
    &.zust-tablet {
      @include zust-tablet {
        flex-wrap: nowrap;

        > .zust-column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    &.zust-touch {
      @include touch {
        flex-wrap: nowrap;

        > .zust-column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    &.zust-desktop {
      @include desktop {
        flex-wrap: nowrap;

        > .zust-column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }
    */

    @include each-breakpoint('&.zust-name', 'name') {
      flex-wrap: nowrap;

      > .zust-column {
        margin: 0 $it-mar 0 0;

        @include sizes;
      }
    }

    // End of Replacement 2
  }

  .zust-column {
    margin: 0 $it-mar 0 0;
    padding: $it-pad;
    width: 100%;

    // Replacement #3
    //$not-selector: getClassList($breakpoint-names, ':not(.zust-default-name)', 'name', '', '', '');

    //&:not(.zust-default)#{$not-selector} {
    //  width: 100%;
    //}

    /*
    &:not(.zust-default):not(.zust-default-mobile):not(.zust-default-tablet):not(.zust-default-touch):not(.zust-default-desktop) {
      width: 100%;
    }
    */
    // End of Replacement #3

    // Replacement #4
    /*
    &.zust-default-mobile {
      @include mobile {
        flex: none;
      }

      @include tablet {
        width: 100%;
      }

      @include desktop {
        width: 100%;
      }
    }

    &.zust-default-tablet {
      @include zust-tablet {
        flex: none;
      }

      @include mobile {
        width: 100%;
      }

      @include desktop {
        width: 100%;
      }
    }

    &.zust-default-touch {
      @include touch {
        flex: none;
      }

      @include desktop {
        width: 100%;
      }
    }

    &.zust-default-desktop {
      @include desktop {
        flex: none;
      }

      @include touch {
        width: 100%;
      }
    }
    */

    //$default-selector: getClassList($breakpoint-names, '&.zust-default-name', 'name', '', '', ', ');

    //@debug $default-selector;

    //#{$default-selector} {
    //  width: 100%;
    //}

    &.zust-default {
      flex: none;
      width: auto;
    }

    @include each-breakpoint('&.zust-default-name', 'name') {
      flex: none;
      width: auto;
    }

    @include mobile {
      margin: 0 0 $it-mar 0;
    }

    &:last-child {
      margin: 0 !important;
    }

    &.zust-full {
      flex: none;
      width: 100%;
    }

    &.zust-container {
      padding: 0;
    }

    @include tablet {
      @include sizes;
    }
    /*
    @include mobile {
      @include c-sizes(mobile);
    }

    @include zust-tablet {
      @include c-sizes(tablet);
    }

    @include touch {
      @include c-sizes(touch);
    }

    @include desktop {
      @include c-sizes(desktop);
    }
    */

    @each $name, $min-width, $max-width in $breakpoints {
      @if $name {
        @if ($min-width not null) and ($max-width == null) {
          @media screen and (min-width: $min-width) {
            @include sizes(-#{$name});
          }
        } @else if ($min-width == null) and ($max-width not null) {
          @media screen and (max-width: $max-width) {
            @include sizes(-#{$name});
          }
        } @else if ($min-width not null) and ($max-width not null) {
          @media screen and (min-width: $min-width) and (max-width: $max-width) {
            @include sizes(-#{$name});
          }
        }
      }
    }

  }
}
