$container-items-margin: 10px !default;
$container-items-padding: 5px !default;
$container-padding: 0px !default;
$container-margin: 10px !default;

// Comfort Use
$it-mar: $container-items-margin;
$it-pad: $container-items-padding;

// Sizes
@mixin sizes($suffix: '') {
  &.#{$prefix}1-2#{$suffix}, &.#{$prefix}half#{$suffix}  {
    flex: none;
    width: 50% !important;
  }

  // Three Parts
  @for $i from 1 through 2 {
    &.#{$prefix}#{$i}-3#{$suffix} {
      flex: none;
      width: percentage($i/3) !important;
    }
  }

  // Four Parts
  @for $i from 1 through 3 {
    &.#{$prefix}#{$i}-4#{$suffix} {
      flex: none;
      width: percentage($i/4) !important;
    }
  }

  // Five Parts
  @for $i from 1 through 4 {
    &.#{$prefix}#{$i}-5#{$suffix} {
      flex: none;
      width: percentage($i/5) !important;
    }
  }

  // 12 Parts
  @for $i from 1 through 11 {
    &.#{$prefix}#{$i}-12#{$suffix} {
      flex: none;
      width: percentage($i/12) !important;
    }
  }
}

.#{$prefix}container {
  padding: $container-padding;
  margin: $container-margin;
  display: flex;
  flex-wrap: wrap;
  overflow: hidden;
  overflow: visible;

  &.#{$prefix}v-centered {
    align-items: center;
  }

  &.#{$prefix}h-centered {
    justify-content: center;
  }

  &.#{$prefix}f-centered {
    align-items: center;
    justify-content: center;
  }

  &.#{$prefix}column {
    margin: 0 0 $container-margin 0;

// Replacement #1

    $not-selector: getClassList($breakpoint-names, ':not(.#{$prefix}name)', 'name', '', '', '');

    &:not(.#{$prefix}custom)#{$not-selector} {
      @include tablet {
        flex-wrap: nowrap;
      }
    }

    $common-selector: getClassList($breakpoint-names, '.#{$prefix}name', 'name', '&', '', ', &');

    #{$common-selector} {
      > .#{$prefix}column {
        margin: 0 0 $it-mar 0;
      }
    }

/*
//    &:not(.#{$prefix}custom):not(.#{$prefix}mobile):not(.#{$prefix}tablet):not(.#{$prefix}touch):not(.#{$prefix}desktop) {
//      @include tablet {
//        flex-wrap: nowrap;
//      }
//    }


    &.#{$prefix}mobile, &.#{$prefix}tablet, &.#{$prefix}touch, &.#{$prefix}desktop {
      > .#{$prefix}column {
        margin: 0 0 $it-mar 0;
      }
    }
*/
// End of Replacement #1

    &.#{$prefix}custom {
      &:not(.#{$prefix}active) {
        > .#{$prefix}column {
          margin: 0 0 $it-mar 0;
        }
      }

      &.#{$prefix}active {
        flex-wrap: nowrap;

        > .#{$prefix}column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    &.#{$prefix}all/*, &.#{$prefix}mobile*/ {
      @include mobile {
        flex-wrap: nowrap;

        > .#{$prefix}column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    // Replacement #2
    /*
    &.#{$prefix}tablet {
      @include only-tablet {
        flex-wrap: nowrap;

        > .#{$prefix}column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    &.#{$prefix}touch {
      @include touch {
        flex-wrap: nowrap;

        > .#{$prefix}column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }

    &.#{$prefix}desktop {
      @include desktop {
        flex-wrap: nowrap;

        > .#{$prefix}column {
          margin: 0 $it-mar 0 0;

          @include sizes;
        }
      }
    }
    */

    @include each-breakpoint('&.#{$prefix}name', 'name') {
      flex-wrap: nowrap;

      > .#{$prefix}column {
        margin: 0 $it-mar 0 0;

        @include sizes;
      }
    }

    // End of Replacement 2
  }

  .#{$prefix}column {
    margin: 0 $it-mar 0 0;
    padding: $it-pad;
    width: 100%;

    // Replacement #3
    //$not-selector: getClassList($breakpoint-names, ':not(.#{$prefix}default-name)', 'name', '', '', '');

    //&:not(.#{$prefix}default)#{$not-selector} {
    //  width: 100%;
    //}

    /*
    &:not(.#{$prefix}default):not(.#{$prefix}default-mobile):not(.#{$prefix}default-tablet):not(.#{$prefix}default-touch):not(.#{$prefix}default-desktop) {
      width: 100%;
    }
    */
    // End of Replacement #3

    // Replacement #4
    /*
    &.#{$prefix}default-mobile {
      @include mobile {
        flex: none;
      }

      @include tablet {
        width: 100%;
      }

      @include desktop {
        width: 100%;
      }
    }

    &.#{$prefix}default-tablet {
      @include only-tablet {
        flex: none;
      }

      @include mobile {
        width: 100%;
      }

      @include desktop {
        width: 100%;
      }
    }

    &.#{$prefix}default-touch {
      @include touch {
        flex: none;
      }

      @include desktop {
        width: 100%;
      }
    }

    &.#{$prefix}default-desktop {
      @include desktop {
        flex: none;
      }

      @include touch {
        width: 100%;
      }
    }
    */

    //$default-selector: getClassList($breakpoint-names, '&.#{$prefix}default-name', 'name', '', '', ', ');

    //@debug $default-selector;

    //#{$default-selector} {
    //  width: 100%;
    //}

    &.#{$prefix}default {
      flex: none;
      width: auto;
    }

    @include each-breakpoint('&.#{$prefix}default-name', 'name') {
      flex: none;
      width: auto;
    }

    @include mobile {
      margin: 0 0 $it-mar 0;
    }

    &:last-child {
      margin: 0 !important;
    }

    &.#{$prefix}full {
      flex: none;
      width: 100%;
    }

    &.#{$prefix}container {
      padding: 0;
    }

    @include tablet {
      @include sizes;
    }
    /*
    @include mobile {
      @include c-sizes(mobile);
    }

    @include only-tablet {
      @include c-sizes(tablet);
    }

    @include touch {
      @include c-sizes(touch);
    }

    @include desktop {
      @include c-sizes(desktop);
    }
    */

    @each $name, $min-width, $max-width in $breakpoints {
      @if $name {
        @if ($min-width not null) and ($max-width == null) {
          @media screen and (min-width: $min-width) {
            @include sizes(-#{$name});
          }
        } @else if ($min-width == null) and ($max-width not null) {
          @media screen and (max-width: $max-width) {
            @include sizes(-#{$name});
          }
        } @else if ($min-width not null) and ($max-width not null) {
          @media screen and (min-width: $min-width) and (max-width: $max-width) {
            @include sizes(-#{$name});
          }
        }
      }
    }

  }
}

// Grouping
.#{$prefix}el-group {
  display: inline-flex;
  justify-content: flex-start;
  align-items: stretch;
  margin-top: 0;
  margin-right: 8px;
  margin-bottom: 8px;

  > *, > .#{$prefix}dropdown > .#{$prefix}btn {
    margin: 0 !important;
  }

  > .#{$prefix}dropdown > .#{$prefix}btn {
    height: 100%;
  }

  &:not(.#{$prefix}vertical) {
    > :first-child, > label:first-child > .#{$prefix}btn, > .#{$prefix}dropdown:first-child > .#{$prefix}btn {
      border-top-right-radius: 0 !important;
      border-bottom-right-radius: 0 !important;
    }

    > *:not(:first-child):not(:last-child), label:not(:first-child):not(:last-child) > .#{$prefix}btn {
      border-radius: 0 0 0 0 !important;
    }


    > *:not(:first-child):not(:last-child).#{$prefix}btn {
      border-left-width: 0 !important;
      //border-right-width: 0 !important;
    }

    > :last-child, > label:last-child > .#{$prefix}btn, > .#{$prefix}dropdown:last-child > .#{$prefix}btn {
      border-top-left-radius: 0 !important;
      border-bottom-left-radius: 0 !important;
    }

    > :last-child.#{$prefix}btn, > .#{$prefix}dropdown:last-child > .#{$prefix}btn {
      border-left-width: 0 !important;
    }
  }

  &.#{$prefix}vertical {
    display: inline-flex;
    flex-direction: column;

    > :first-child, > label:first-child > .#{$prefix}btn {
      border-bottom-right-radius: 0 !important;
      border-bottom-left-radius: 0 !important;
    }

    > :first-child.#{$prefix}button {
      border-bottom-width: 0 !important;
    }

    > *:not(:first-child):not(:last-child), label:not(:first-child):not(:last-child) > .#{$prefix}btn {
      border-radius: 0 0 0 0 !important;
    }

    > *:not(:first-child):not(:last-child).#{$prefix}btn {
      border-bottom-width: 0 !important;
    }

    > :last-child, > label:last-child > .#{$prefix}btn {
      border-top-right-radius: 0 !important;
      border-top-left-radius: 0 !important;
    }

    > label {
      width: 100%;
      display: flex;

      > .#{$prefix}btn {
        width: 100%;
      }
    }
  }

  &.#{$prefix}fullwidth, &.#{$prefix}full-width {
    display: flex;

    > .#{$prefix}form-el {
      //width: 100%;
    }
  }
}
